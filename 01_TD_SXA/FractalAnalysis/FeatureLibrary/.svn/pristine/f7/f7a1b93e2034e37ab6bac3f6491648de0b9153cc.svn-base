function [output, outputFeature_id]=feat_stat(imageObj,maskObj,inputParam)
%sum whichever portion of imageObj is of interest
switch inputParam.main_func.parameter_1
    case 'BREAST'
        image=imageObj.breastMask;
    case 'RAW'
        image=imageObj.imageRaw;
    case 'ATTEN'
        image=imageObj.imageAtten;
    case 'THICK'
        image=imageObj.imageThick;
    case 'DENSITY'
        image=imageObj.imageDensity;
    case 'AREA'
        image=imageObj.breastMask*(imageObj.resolution*imageObj.resolution);%in square mm
    case 'VOLUME'
        image=imageObj.breastMask.*imageObj.imageThick*(imageObj.resolution*imageObj.resolution)*10.0; %in cubic mm, hopefully
    case 'FIBROVOL'
        image=imageObj.imageDensity.*imageObj.imageThick;
    otherwise
        error('feat_sum:BADPARAM', 'Unrecognized parameter');
end
smallBreastMask=do_mask(imageObj.breastMask, maskObj);
smallImage=do_mask(image, maskObj);
imageVal=smallImage((maskObj.roiMask.*smallBreastMask>0));
switch inputParam.main_func.parameter_2;
    case 'SUM'
        output=sum(imageVal);
    case 'AVG'
        output=mean(imageVal);
    case 'MEDIAN'
        output=median(imageVal);
    case 'STD'
        output=std(imageVal);
    case 'DENSITY'
        output=sum(imageVal)/(sum(sum(do_mask(imageObj.imageThick, maskObj).*smallBreastMask)));
end
outputFeature_id=inputParam.sub_func{1}.feature_id;
end