function [output, outputFeature_id]=feat_location(imageObj,maskObj,inputParam)
switch inputParam.main_func.parameter_1
    case 'ABS'
        posOffset=[0,0];
    case 'RELNIP'
        posOffset=imageObj.midnip;
    otherwise
        error('feat_sum:BADPARAM', 'Unrecognized parameter');
end
switch inputParam.main_func.parameter_2
    case 'PIXELS'
        posScale=1;
    case 'MM'
        posScale=imageObj.resolution;
    otherwise
        error('feat_sum:BADPARAM', 'Unrecognized parameter');
end
switch inputParam.main_func.parameter_3
    case 'CENTROID'
        stats=regionprops(maskObj.roiMask, 'Centroid');
        roiPos=stats.Centroid+
        %Please note that I'm assuming that a roi must be contiguous.
    case 'MM'
        posScale=imageObj.resolution;
    otherwise
        error('feat_sum:BADPARAM', 'Unrecognized parameter');
end
smallBreastMask=do_mask(imageObj.breastMask, maskObj);
smallImage=do_mask(image, maskObj);
imageVal=smallImage((maskObj.roiMask.*smallBreastMask>0));
switch inputParam.main_func.parameter_2;
    case 'SUM'
        output=sum(imageVal);
    case 'AVG'
        output=mean(imageVal);
    case 'MEDIAN'
        output=median(imageVal);
    case 'STD'
        output=std(imageVal);
    case 'DENSITY'
        output=sum(imageVal)/(sum(sum(do_mask(imageObj.imageThick, maskObj).*smallBreastMask)));
end
outputFeature_id=inputParam.sub_func{1}.feature_id;
end